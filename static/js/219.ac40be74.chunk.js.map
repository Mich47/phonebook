{"version":3,"file":"static/js/219.ac40be74.chunk.js","mappings":"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","sources":["components/ContactsForm/ContactsForm.jsx","components/ModalDeleteContact/ModalDeleteContact.jsx","components/ModalEditContact/ModalEditContact.jsx","components/ContactsTable/ContactsTableRow.jsx","components/ContactsTable/ContactsTable.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx","redux/contacts/contacts.selectors.js","redux/filter/filter.selectors.js"],"sourcesContent":["import { PropTypes } from 'prop-types';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { patchContact, postContact } from 'redux/contacts/contacts.operations';\nimport { selectContacts } from 'redux/contacts/contacts.selectors';\nimport { Box, Button, TextField } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\n\nexport const ContactForm = ({ editedId }) => {\n  const contacts = useSelector(selectContacts);\n  const navigate = useNavigate();\n\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState(() => localStorage.getItem('name') ?? '');\n  const [nameError, setNameError] = useState(false);\n  const changeName = event => {\n    const { value } = event.target;\n    localStorage.setItem('name', value);\n    setName(value);\n    setNameError(false);\n  };\n\n  const [number, setNumber] = useState(\n    () => localStorage.getItem('number') ?? ''\n  );\n  const [numberError, setNumberError] = useState(false);\n  const changeNumber = event => {\n    const { value } = event.target;\n    localStorage.setItem('number', value);\n    setNumber(value);\n    setNumberError(false);\n  };\n\n  const handleSubmitForm = async (event, name, number) => {\n    event.preventDefault();\n    //Контакт вже існує і не редагується\n    if (!editedId && contacts.some(contact => contact.name === name)) {\n      toast.warning(`${name} is already in contacts.`);\n      setNameError(true);\n      return;\n    }\n\n    //Інакше оновлює, або додає новий контакт\n    try {\n      editedId\n        ? await dispatch(patchContact({ id: editedId, name, number })).unwrap()\n        : await dispatch(postContact({ name, number })).unwrap();\n    } catch (error) {\n      toast.error('Error saving contact');\n    }\n    navigate('/contacts');\n    toast.success('Contact saved successfully');\n    clearForm();\n  };\n\n  const clearForm = () => {\n    setName('');\n    setNumber('');\n    localStorage.removeItem('name');\n    localStorage.removeItem('number');\n  };\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', width: '100%' }}>\n      <Box\n        component=\"form\"\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          gap: '16px',\n        }}\n        autoComplete=\"off\"\n        onSubmit={event => handleSubmitForm(event, name, number)}\n      >\n        <Box display=\"flex\" flexDirection=\"column\">\n          <TextField\n            error={nameError}\n            inputProps={{\n              pattern:\n                \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n              title:\n                \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n            }}\n            id=\"name\"\n            label=\"Name\"\n            variant=\"outlined\"\n            value={name}\n            type=\"text\"\n            name=\"name\"\n            required\n            autoFocus\n            onInvalid={() => setNameError(true)}\n            onChange={changeName}\n          />\n        </Box>\n        <Box display=\"flex\" flexDirection=\"column\">\n          <TextField\n            error={numberError}\n            inputProps={{\n              inputMode: 'numeric',\n              pattern:\n                '\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}',\n              title:\n                'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n            }}\n            id=\"number\"\n            label=\"Number\"\n            variant=\"outlined\"\n            value={number}\n            type=\"tel\"\n            name=\"number\"\n            required\n            onInvalid={() => setNumberError(true)}\n            onChange={changeNumber}\n          />\n        </Box>\n        <Button variant=\"contained\" type=\"submit\">\n          Save\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nContactForm.propTypes = {\n  editedId: PropTypes.string,\n};\n","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contacts.operations';\nimport { toast } from 'react-toastify';\n\nexport const ModalDeleteContact = ({ id, open, setOpen }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = async id => {\n    try {\n      await dispatch(deleteContact(id)).unwrap();\n      toast.success('Contact deleted');\n    } catch (error) {\n      toast.error('Error deleting contact');\n    }\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <DialogTitle id=\"alert-dialog-title\">\n        {'Delete from contacts?'}\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          This contact will be permanently deleted from this account .\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button variant=\"contained\" onClick={handleClose} autoFocus>\n          Cancel\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"warning\"\n          onClick={() => handleDeleteContact(id)}\n        >\n          Delete\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import * as React from 'react';\nimport Dialog from '@mui/material/Dialog';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { ContactForm } from 'components/ContactsForm/ContactsForm';\nimport { IconButton, Stack } from '@mui/material';\n\nexport const ModalEditContact = ({ id, open, setOpen }) => {\n  const handleClose = () => {\n    localStorage.removeItem('name');\n    localStorage.removeItem('number');\n    setOpen(false);\n  };\n\n  return (\n    <Dialog fullWidth={true} maxWidth=\"xs\" open={open} onClose={handleClose}>\n      <Stack direction=\"row\" justifyContent=\"space-between\">\n        <DialogTitle>Edit contact</DialogTitle>\n        <DialogTitle>\n          <IconButton aria-label=\"close\" onClick={handleClose}>\n            <CloseIcon />\n          </IconButton>\n        </DialogTitle>\n      </Stack>\n      <DialogContent>\n        <ContactForm editedId={id} />\n      </DialogContent>\n    </Dialog>\n  );\n};\n","import { PropTypes } from 'prop-types';\nimport {\n  Hidden,\n  IconButton,\n  Stack,\n  TableCell,\n  TableRow,\n  Tooltip,\n} from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { useState } from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { ModalDeleteContact } from 'components/ModalDeleteContact/ModalDeleteContact';\nimport { ModalEditContact } from 'components/ModalEditContact/ModalEditContact';\n\nexport const ContactsTableRow = ({ columns, row }) => {\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n\n  return (\n    <>\n      <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\n        {columns.map(column => {\n          const value = row[column.id];\n          return (\n            <Hidden key={column.id} smDown={column.id === 'number'}>\n              <TableCell align={column.align}>{value}</TableCell>\n            </Hidden>\n          );\n        })}\n        <TableCell key={nanoid()}>\n          <Stack direction=\"row\" justifyContent=\"flex-end\" spacing={1}>\n            <Tooltip title=\"Edit contact\">\n              <IconButton\n                aria-label=\"edit\"\n                onClick={() => {\n                  setIsEditModalOpen(true);\n                  localStorage.setItem('name', row.name);\n                  localStorage.setItem('number', row.number);\n                }}\n              >\n                <EditIcon fontSize=\"small\" />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Delete contact\">\n              <IconButton\n                aria-label=\"delete\"\n                onClick={() => {\n                  setIsDeleteModalOpen(true);\n                }}\n              >\n                <DeleteIcon fontSize=\"small\" />\n              </IconButton>\n            </Tooltip>\n          </Stack>\n        </TableCell>\n      </TableRow>\n\n      {isDeleteModalOpen &&\n        ReactDOM.createPortal(\n          <ModalDeleteContact\n            id={row.id}\n            open={isDeleteModalOpen}\n            setOpen={setIsDeleteModalOpen}\n          />,\n          document.querySelector('#modal-root')\n        )}\n\n      {isEditModalOpen &&\n        ReactDOM.createPortal(\n          <ModalEditContact\n            id={row.id}\n            open={isEditModalOpen}\n            setOpen={setIsEditModalOpen}\n          />,\n          document.querySelector('#modal-root')\n        )}\n    </>\n  );\n};\n\nContactsTableRow.propTypes = {\n  columns: PropTypes.arrayOf(PropTypes.shape({})),\n  row: PropTypes.shape({}),\n};\n","import Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\n\nimport { Box, CircularProgress, Hidden, Typography } from '@mui/material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contacts.operations';\nimport {\n  selectContactsStatus,\n  selectFilteredContacts,\n} from 'redux/contacts/contacts.selectors';\nimport { STATUS } from 'constants/status.constants';\nimport { useEffect } from 'react';\nimport { ContactsTableRow } from './ContactsTableRow';\n\nconst columns = [\n  { id: 'name', label: 'Name', minWidth: 170 },\n  {\n    id: 'number',\n    label: 'Number',\n    minWidth: 100,\n    align: 'left',\n  },\n];\n\nexport const ContactsTable = () => {\n  const status = useSelector(selectContactsStatus);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const rows = useSelector(selectFilteredContacts);\n\n  return (\n    <>\n      {status === STATUS.loading && (\n        <Box sx={{ display: 'flex', justifyContent: 'center' }}>\n          <CircularProgress />\n        </Box>\n      )}\n\n      {status === STATUS.success && (\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'center',\n            width: '100%',\n          }}\n        >\n          <Paper sx={{ width: '100%' }}>\n            <TableContainer>\n              <Table stickyHeader aria-label=\"sticky table\">\n                <TableHead>\n                  <TableRow>\n                    {columns.map(column => (\n                      <Hidden key={column.id} smDown={column.id === 'number'}>\n                        <TableCell\n                          align={column.align}\n                          style={{\n                            minWidth: column.minWidth,\n                            backgroundColor: 'grey',\n                          }}\n                        >\n                          {column.label}\n                        </TableCell>\n                      </Hidden>\n                    ))}\n                    <TableCell\n                      key=\"edit\"\n                      align=\"right\"\n                      sx={{\n                        backgroundColor: 'grey',\n                      }}\n                    >\n                      ...\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {rows.map(row => {\n                    return (\n                      //Render rows\n                      <ContactsTableRow\n                        key={row.id}\n                        columns={columns}\n                        row={row}\n                      />\n                    );\n                  })}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Paper>\n        </Box>\n      )}\n\n      {status === STATUS.error && (\n        <Box sx={{ display: 'flex', justifyContent: 'center', pt: [2] }}>\n          <Typography>Oops! Something went wrong. Please try again.</Typography>\n        </Box>\n      )}\n    </>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport Box from '@mui/material/Box';\nimport { setFilter } from 'redux/filter/filter.slice';\nimport { TextField } from '@mui/material';\nimport { selectFilter } from 'redux/filter/filter.selectors';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', width: '100%' }}>\n      <TextField\n        id=\"filter\"\n        label=\"Find contacts by name\"\n        variant=\"outlined\"\n        value={filter}\n        type=\"text\"\n        name=\"filter\"\n        onChange={handleChangeFilter}\n      />\n    </Box>\n  );\n};\n","import {\n  Avatar,\n  Box,\n  CircularProgress,\n  CssBaseline,\n  Typography,\n} from '@mui/material';\nimport ContactPhoneRoundedIcon from '@mui/icons-material/ContactPhoneRounded';\n\nimport { ContactsTable } from 'components/ContactsTable/ContactsTable';\nimport { Filter } from 'components/Filter/Filter';\nimport { STATUS } from 'constants/status.constants';\nimport { useSelector } from 'react-redux';\nimport { selectAuthStatus } from 'redux/auth/auth.selectors';\nimport { Container } from '@mui/system';\n\nexport default function Contacts() {\n  const status = useSelector(selectAuthStatus);\n  return (\n    <>\n      <Container component=\"section\" maxWidth=\"md\">\n        <CssBaseline />\n        {status === STATUS.loading && (\n          <Box sx={{ display: 'flex', justifyContent: 'center', mt: 10 }}>\n            <CircularProgress size={100} />\n          </Box>\n        )}\n        {status === STATUS.success && (\n          <Box\n            sx={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              flexDirection: 'column',\n              gap: '24px',\n              mx: 'auto',\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n              <ContactPhoneRoundedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\" textAlign=\"center\">\n              My Contacts\n            </Typography>\n            <Filter />\n            <ContactsTable />\n          </Box>\n        )}\n      </Container>\n    </>\n  );\n}\n","import { selectFilter } from 'redux/filter/filter.selectors';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectContactsStatus = state => state.contacts.status;\nexport const selectContactsError = state => state.contacts.error;\n\nexport const selectFilteredContacts = state => {\n  const contacts = selectContacts(state);\n  const filter = selectFilter(state);\n\n  return filter\n    ? contacts.filter(({ name }) =>\n        name.toLowerCase().includes(filter.toLowerCase())\n      )\n    : contacts;\n};\n","export const selectFilter = state => state.filter;\n"],"names":["ContactForm","editedId","contacts","useSelector","selectContacts","navigate","useNavigate","dispatch","useDispatch","useState","localStorage","getItem","name","setName","nameError","setNameError","number","setNumber","numberError","setNumberError","handleSubmitForm","event","preventDefault","some","contact","toast","patchContact","id","unwrap","postContact","clearForm","removeItem","sx","display","flexDirection","width","component","gap","autoComplete","onSubmit","error","inputProps","pattern","title","label","variant","value","type","required","autoFocus","onInvalid","onChange","target","setItem","inputMode","ModalDeleteContact","open","setOpen","handleDeleteContact","deleteContact","handleClose","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","onClick","color","ModalEditContact","fullWidth","maxWidth","Stack","direction","justifyContent","IconButton","Close","ContactsTableRow","columns","row","isDeleteModalOpen","setIsDeleteModalOpen","isEditModalOpen","setIsEditModalOpen","TableRow","hover","role","tabIndex","map","column","Hidden","smDown","TableCell","align","spacing","Tooltip","Edit","fontSize","Delete","nanoid","ReactDOM","document","querySelector","minWidth","ContactsTable","status","selectContactsStatus","useEffect","fetchContacts","rows","selectFilteredContacts","STATUS","Box","CircularProgress","Paper","TableContainer","Table","stickyHeader","TableHead","style","backgroundColor","TableBody","pt","Typography","Filter","filter","selectFilter","TextField","setFilter","Contacts","selectAuthStatus","Container","CssBaseline","mt","size","alignItems","mx","Avatar","m","bgcolor","ContactPhoneRounded","textAlign","state","items","toLowerCase","includes"],"sourceRoot":""}